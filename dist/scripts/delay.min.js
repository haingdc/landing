export function delay(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=n.signal,r=n.persistent,t=void 0===r||r;return(null==o?void 0:o.aborted)?Promise.reject(o.reason):new Promise(function(n,r){var i,l=function(){clearTimeout(a),r(null==o?void 0:o.reason)},a=setTimeout(function(){null==o||o.removeEventListener("abort",l),n()},e);if(null==o||o.addEventListener("abort",l,{once:!0}),!1===t)try{Deno.unrefTimer(a)}catch(e){if(null!=(i=ReferenceError)&&"undefined"!=typeof Symbol&&i[Symbol.hasInstance]?!i[Symbol.hasInstance](e):!(e instanceof i))throw e;console.error("`persistent` option is only available in Deno")}})}
//# sourceMappingURL=delay.min.js.map